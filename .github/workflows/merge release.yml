name: Auto Merge Latest Release

on:
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  create-and-merge-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Get Branches
        uses: actions/github-script@v7
        id: branches
        with:
          result-encoding: string
          script: |
            const branches = await github.rest.git.listMatchingRefs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/release/',
            });
            const regex = new RegExp("^.*(release\/[0-9]+.[0-9]+.[0-9]+.[0-9]+)$");
            let result = "";
            branches.data.forEach((branch) => {
              const match = branch.ref.match(regex);
              if (match != null) {
                result += match[1] + '\n';
              }
            });
            return result;
      - name: Get Current Release
        run: |
          LATEST_RELEASE=$(echo "${{steps.branches.outputs.result}}" | grep -o 'release/[0-9]*\.[0-9]*\.[0-9]*\.[0-9]' | sort --version-sort | tail -n1 | grep -o '[0-9]*\.[0-9]*\.[0-9]*\.[0-9]')
          echo "LATEST_RELEASE=${LATEST_RELEASE}" >> $GITHUB_ENV

      - name: Create Pull Request using GitHub CLI
        id: create_pr
        run: |
          PR_URL=$(gh pr create \
            --head "${NEXT_RELEASE}" \
            --base main \
            --title "Merge ${{ env.latest_branch }} into main" \
            --body "Automated PR to merge the latest release branch into main." \
            --label "auto-merge")
          
          echo "Pull request created: $PR_URL"
          echo "pr_number=$PR_URL" >> $GITHUB_ENV

      - name: Auto-merge PR if checks pass
        if: env.pr_number != ''
        run: |
          gh pr merge ${{ env.pr_number }} --auto --squash
